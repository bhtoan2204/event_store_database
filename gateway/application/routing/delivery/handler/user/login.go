// Code generated by scaffolds. DO NOT EDIT.
package user

import (
	"event_sourcing_gateway/package/settings"
	"event_sourcing_gateway/proto/user"

	"event_sourcing_gateway/package/monitor"
	"event_sourcing_gateway/package/wrapper"

	"go.elastic.co/apm/v2"
)

type loginHandler struct {
}

func NewLoginHandler(cfg *settings.Config) *loginHandler {
	return &loginHandler{}
}

// @Summary	permission:
// @Tags		UserService
// @Accept		json
// @Produce	json
// @Param		email		body		string				false	"<param_description>"
// @Param		password	body		string				false	"<param_description>"
// @Param		body		body		user.LoginRequest	true	"Body example"
// @Success	200			{object}	user.LoginResponse
// @Router		/api/v1/user-service/auth/login [post]
func (handler *loginHandler) Handle(ctx *wrapper.Context) (interface{}, error) {
	monitor.SetApmContext(apm.DetachedContext(ctx.Request.Context()))
	data := user.LoginRequest{}
	if err := ctx.BindJSON(&data); err != nil {
		return nil, err
	}

	return &data, nil
}
